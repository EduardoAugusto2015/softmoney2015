/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package pi;

import java.awt.HeadlessException;
import java.awt.Image;
import java.awt.Toolkit;
import java.math.BigDecimal;
import java.net.URL;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import java.text.DecimalFormat;
import java.text.NumberFormat;
import java.util.ArrayList;
import java.util.Locale;
import javax.swing.JOptionPane;
import javax.swing.ListSelectionModel;
import javax.swing.SwingConstants;
import javax.swing.event.TableModelEvent;
import javax.swing.event.TableModelListener;
import javax.swing.table.DefaultTableCellRenderer;
import pi.Conexao;
/**
 *
 * @author Crawlers
 */


public class TabelaReceitas extends javax.swing.JFrame {

    /**
     * Creates new form TabelaReceitas
     */
    public TabelaReceitas(Menu menu) {
        initComponents();
        this.menu = menu;
        preencherTabela();
        setLocationRelativeTo(null);
        URL url = this.getClass().getResource("/Imagens/dolar.gif");
        Image imagemTitulo = Toolkit.getDefaultToolkit().getImage(url);
        this.setIconImage(imagemTitulo);
        this.setTitle("SoftMoney - Minhas Receitas");

    }

    private TabelaReceitas() {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tabelaReceitas = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        descricaotext = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        datatext = new javax.swing.JFormattedTextField();
        jLabel8 = new javax.swing.JLabel();
        categoriabox = new javax.swing.JComboBox();
        valortext = new javax.swing.JFormattedTextField();
        jButton7 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);

        tabelaReceitas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        tabelaReceitas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabelaReceitasMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tabelaReceitas);

        jButton1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jButton1.setForeground(new java.awt.Color(0, 153, 0));
        jButton1.setText("Salvar ");
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton1MouseClicked(evt);
            }
        });
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 0, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Minhas Receitas");

        jButton2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jButton2.setForeground(new java.awt.Color(255, 102, 0));
        jButton2.setText("Excluir");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Descrição:");

        descricaotext.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        descricaotext.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                descricaotextFocusLost(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText("Valor:");

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setText("Data:");

        try {
            datatext.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        datatext.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel8.setText("Categoria:");

        categoriabox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Sálario", "Investimento", "Prêmio", "Presente", "Outros" }));
        categoriabox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                categoriaboxActionPerformed(evt);
            }
        });

        valortext.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(java.text.NumberFormat.getCurrencyInstance())));
        valortext.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        valortext.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                valortextFocusLost(evt);
            }
        });

        jButton7.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jButton7.setForeground(new java.awt.Color(255, 0, 0));
        jButton7.setText("Cancelar");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 750, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(161, 161, 161)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel6))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(descricaotext, javax.swing.GroupLayout.PREFERRED_SIZE, 365, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(valortext, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel7)
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jButton7)
                                    .addComponent(datatext, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel8)
                        .addGap(19, 19, 19)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(categoriabox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 252, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(descricaotext, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jLabel7)
                    .addComponent(datatext, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(valortext, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(categoriabox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2)
                    .addComponent(jButton7))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        ModeloTabela model = (ModeloTabela) tabelaReceitas.getModel();

       // for (int l = 0; l < model.getRowCount(); l++) {
           // if (model.isLinhaEditada(l)) {
            
                if(tabelaReceitas.getSelectedRow() > -1){
               
                Sessao sessao = Sessao.getInstancia();
                int id = sessao.getIdUsuario();
                
                Conexao atualiza = new Conexao();
                atualiza.abrirConexao();
                atualiza.rs = null;

                try {
                    atualiza.st = atualiza.con.createStatement();
                    PreparedStatement st = atualiza.con.prepareStatement("UPDATE receitas SET descricao = ?, valor = ?, periodo = ?, categoria = ? WHERE ID_usuario = ? AND ID_receitas = ?");
                    
                    double valor = Double.parseDouble(valortext.getValue().toString());
                    
                    st.setString(1, descricaotext.getText());
                    st.setDouble(2, valor);
                    st.setString(3, datatext.getText());
                    st.setString(4, categoriabox.getSelectedItem().toString());
                    st.setInt(5, id);
                    st.setInt(6, (int) model.getValueAt(tabelaReceitas.getSelectedRow(), 0));
                    st.executeUpdate();
                    JOptionPane.showMessageDialog(null, "Atualizado com Sucesso!", "Aviso", JOptionPane.INFORMATION_MESSAGE);
                    preencherTabela();
                    menu.atualizarSaldoAtual();
                } catch (SQLException | HeadlessException e) {
                    JOptionPane.showMessageDialog(null, "Selecione uma receita na tabela para editar!", "Aviso", JOptionPane.WARNING_MESSAGE);
                }
                }else{
                    JOptionPane.showMessageDialog(null, "Selecione uma receita na tabela para editar!", "Aviso", JOptionPane.WARNING_MESSAGE);
                    descricaotext.setText(null);
                    valortext.setText(null);
                    datatext.setText(null);
                }
                

                //ler os dados da linha da table
                //conectar com o banco de dados
                //criar o comando update
                //e executar
         //   }
       // }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        deletarLinha();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void categoriaboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_categoriaboxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_categoriaboxActionPerformed

    private void valortextFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_valortextFocusLost
        String sv = valortext.getText();
        String vsf = sv.replace("R$", "").replace(" ", "").replace(".", "").replace(",", ".");
        BigDecimal valor = new BigDecimal(vsf);
        NumberFormat nf = NumberFormat.getCurrencyInstance(new Locale("pt", "BR"));
        String valorFormatado = nf.format(valor);
        valortext.setText(valorFormatado);
    }//GEN-LAST:event_valortextFocusLost

    private void tabelaReceitasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabelaReceitasMouseClicked
        int linhaSelecionada = tabelaReceitas.getSelectedRow();
        
        double valor = 0.0;
        try {
            valor = Double.parseDouble(formatter.parse(tabelaReceitas.getValueAt(linhaSelecionada, 2).toString()).toString());
        } catch(Exception e) {
            e.printStackTrace();
        }
        
        descricaotext.setText(tabelaReceitas.getValueAt(linhaSelecionada, 1).toString());
        valortext.setValue(valor);
        datatext.setText(tabelaReceitas.getValueAt(linhaSelecionada, 3).toString());
        categoriabox.setSelectedItem(tabelaReceitas.getValueAt(linhaSelecionada, 4));
    }//GEN-LAST:event_tabelaReceitasMouseClicked

    private void jButton1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseClicked
        
    }//GEN-LAST:event_jButton1MouseClicked

    private void descricaotextFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_descricaotextFocusLost
        
    }//GEN-LAST:event_descricaotextFocusLost

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        this.dispose();        // TODO add your handling code here:
    }//GEN-LAST:event_jButton7ActionPerformed
   
        


public void deletarLinha() {
        ModeloTabela model = (ModeloTabela) tabelaReceitas.getModel();
        int resposta = JOptionPane.showConfirmDialog(null, "Tem certeza que deseja excluir essa linha?", "Aviso", JOptionPane.YES_NO_OPTION);
        if (resposta == JOptionPane.YES_OPTION) {

            Conexao delLin = new Conexao();
            delLin.abrirConexao();
            delLin.rs = null;
            try {
                delLin.st = delLin.con.createStatement();
                PreparedStatement st = delLin.con.prepareStatement("DELETE FROM receitas WHERE ID_receitas = ?");

                st.setInt(1, (int) model.getValueAt(tabelaReceitas.getSelectedRow(), 0));
                st.executeUpdate();
                preencherTabela();
                menu.atualizarSaldoAtual();
            } catch (SQLException | HeadlessException e) {
            }
        }
    }

    public void preencherTabela() {
        ArrayList dados = new ArrayList();

        String[] colunas = new String[]{"ID", "Descrição", "Valor", "Data", "Categoria"};

        DefaultTableCellRenderer centralizado = new DefaultTableCellRenderer();
        centralizado.setHorizontalAlignment(SwingConstants.CENTER);

        Sessao sessao = Sessao.getInstancia();
        int id = sessao.getIdUsuario();

        Conexao tabela = new Conexao();
        tabela.abrirConexao();
        tabela.rs = null;

        try {
            tabela.st = tabela.con.createStatement();
            PreparedStatement st = tabela.con.prepareStatement("SELECT ID_receitas, descricao, valor, periodo, categoria FROM receitas WHERE id_usuario = ?");

            st.setInt(1, id);
            tabela.rs = st.executeQuery();
            
            while (tabela.rs.next()) {
                //String valor = tabela.rs.getString("valor");
                //valor = valor.replace('.', ',');
                //valor = "R$ " + valor;
                double valor = tabela.rs.getDouble("valor");
                dados.add(new Object[]{tabela.rs.getInt("ID_receitas"), tabela.rs.getString("descricao"), formatter.format(valor), tabela.rs.getString("periodo"), tabela.rs.getString("categoria")});
            }
        } catch (SQLException | HeadlessException e) {
        }

        ModeloTabela modelo = new ModeloTabela(dados, colunas);
        modelo.addTableModelListener(new TableModelListener() {

            @Override
            public void tableChanged(TableModelEvent e) {
                int r = e.getFirstRow();
                int c = e.getColumn();
                System.out.println("Editado: " + r + "," + c);
            }

        });

        tabelaReceitas.setModel(modelo);
        tabelaReceitas.getColumnModel().getColumn(0).setPreferredWidth(162);
        tabelaReceitas.getColumnModel().getColumn(0).setResizable(false);
        tabelaReceitas.getColumnModel().getColumn(0).setCellRenderer(centralizado);
        tabelaReceitas.getColumnModel().getColumn(1).setPreferredWidth(162);
        tabelaReceitas.getColumnModel().getColumn(1).setResizable(false);
        tabelaReceitas.getColumnModel().getColumn(1).setCellRenderer(centralizado);
        tabelaReceitas.getColumnModel().getColumn(2).setPreferredWidth(163);
        tabelaReceitas.getColumnModel().getColumn(2).setResizable(false);
        tabelaReceitas.getColumnModel().getColumn(2).setCellRenderer(centralizado);
        tabelaReceitas.getColumnModel().getColumn(3).setPreferredWidth(162);
        tabelaReceitas.getColumnModel().getColumn(3).setResizable(false);
        tabelaReceitas.getColumnModel().getColumn(3).setCellRenderer(centralizado);
        tabelaReceitas.getColumnModel().getColumn(4).setPreferredWidth(161);
        tabelaReceitas.getColumnModel().getColumn(4).setResizable(false);
        tabelaReceitas.getColumnModel().getColumn(4).setCellRenderer(centralizado);
        tabelaReceitas.getTableHeader().setReorderingAllowed(false);
        tabelaReceitas.setAutoResizeMode(tabelaReceitas.AUTO_RESIZE_OFF);
        tabelaReceitas.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        ((DefaultTableCellRenderer) tabelaReceitas.getTableHeader().getDefaultRenderer()).setHorizontalAlignment(SwingConstants.CENTER);
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TabelaReceitas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TabelaReceitas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TabelaReceitas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TabelaReceitas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TabelaReceitas().setVisible(true);
            }
        });
    }
    
    NumberFormat formatter = new DecimalFormat("¤ #,##0.00");
    private Menu menu;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox categoriabox;
    private javax.swing.JFormattedTextField datatext;
    private javax.swing.JTextField descricaotext;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton7;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tabelaReceitas;
    private javax.swing.JFormattedTextField valortext;
    // End of variables declaration//GEN-END:variables

    private void HashMap() {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }
}
